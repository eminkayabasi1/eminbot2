package com.app.fku.dyson.fonksiyon.impl;

import com.app.fku.dyson.entity.DysonKategori;
import com.app.fku.dyson.entity.DysonTelegramConf;
import com.app.fku.dyson.fonksiyon.service.DysonEkranOkumaService;
import com.app.fku.dyson.fonksiyon.service.DysonGenelService;
import com.app.fku.dyson.repository.DysonTelegramConfRepository;
import com.app.fku.genel.fonksiyon.service.GenelService;
import com.app.fku.genel.fonksiyon.service.LogService;
import com.app.fku.genel.model.GenelUrunModel;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.io.IOException;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.concurrent.TimeUnit;

@Service
public class DysonEkranOkumaServiceImpl implements DysonEkranOkumaService {

    @Autowired
    GenelService genelService;

    @Autowired
    LogService logService;

    @Autowired
    DysonGenelService dysonGenelService;

    @Autowired
    DysonTelegramConfRepository dysonTelegramConfRepository;

    @Override
    public HashMap<String, GenelUrunModel> kategoriIleUrunBul(DysonKategori dysonKategori, int hataCount, int pageNumber, int maxPageNumber, HashMap<String, GenelUrunModel> urunHashMap, HashMap<String, GenelUrunModel> yeniUrunHashMap, boolean ilkMi) throws InterruptedException {
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy HH:mm");
        NumberFormat nf = new DecimalFormat("#0.00");

        if (yeniUrunHashMap == null) {
            yeniUrunHashMap = new HashMap<>();
        }

        try {

            Document dysonDoc = null;
            for (int i = 1; i > 0; i++) {
                dysonDoc = dysonGenelService.urleGit(dysonKategori.getSayfaAdresi());

                if (dysonDoc == null) {
                    logService.dysonLogYaz("DYSON Hata aAA");
                    Thread.sleep(4000);
                } else {
                    break;
                }
            }

            Elements productElements = dysonDoc.getElementsByClass("slider__list").get(0).getElementsByClass("slider__item");
            for (Element element : productElements) {
                if (element.getElementsByClass("card__pricing__sold-out").get(0).tagName().equals("em")) {
                    //stokta yok demek. .equals("div") olsaydı stokta var demekti.
                    continue;
                }
                String dysonNo = element.attributes().get("id");
                String model = element.getElementsByClass("product-item-link").get(0).childNodes().get(0).toString().trim();
                String urunUrl = element.getElementsByClass("product-item-link").get(0).attributes().get("href");

                GenelUrunModel genelUrunModel = urunHashMap.get(dysonNo);
                String fiyatStr = element.getElementsByClass("price__is").get(0).childNodes().get(1).childNodes().get(1).attributes().get("data-price-amount").trim();
                Double yeniFiyat = Double.valueOf(fiyatStr);

                if (genelUrunModel == null) {
                    //yeni gelmiş ürün
                    GenelUrunModel yeniUrunModel = new GenelUrunModel();
                    yeniUrunModel.setModel(model);
                    yeniUrunModel.setFiyat(yeniFiyat);
                    yeniUrunModel.setMinFiyat(yeniFiyat);
                    yeniUrunModel.setMinFiyatTarihi(new Date());
                    yeniUrunModel.setSonMesajTarihi(new Date());
                    yeniUrunHashMap.put(dysonNo, yeniUrunModel);

                    if (!ilkMi) {
                        String akakceLink = model.replace(" ", "%2B");
                        akakceLink = akakceLink.replace("+", "");

                        String mesaj = "" +
                                dysonKategori.getKategoriAdi() + "%0A" +
                                "YENİ ÜRÜN%0A" +
                                "Ürün Adı: " + model + "%0A" +
                                "Yeni Fiyat: " + nf.format(yeniFiyat) + "%0A" +
                                "Ürün Link:" + urunUrl + "%0A" +
                                "Tarih: " + sdf.format(new Date()) + "%0A" +
                                "Akakçe Link:https://www.akakce.com/arama/?q=" + akakceLink + " %0A " +
                                "***Generated By Emin KAYABASI***";

                        telegramMesajGonder(mesaj, dysonKategori, model, 0L, yeniFiyat.longValue());
                    }
                } else {
                    //zaten var olan ürün
                    if (yeniFiyat < genelUrunModel.getFiyat()) {
                        //mesaj at
                        long diff = new Date().getTime() - genelUrunModel.getSonMesajTarihi().getTime();
                        long minutes = TimeUnit.MILLISECONDS.toMinutes(diff);
                        if (minutes > 10) {
                            String akakceLink = model.replace(" ", "%2B");
                            akakceLink = akakceLink.replace("+", "");

                            Double indirim = genelUrunModel.getFiyat() - yeniFiyat;
                            Double indYuzde = 100 * indirim / genelUrunModel.getFiyat();
                            String mesaj = "" +
                                    dysonKategori.getKategoriAdi() + "%0A" +
                                    "Ürün Adı: " + model + "%0A" +
                                    "Eski Fiyat: " + nf.format(genelUrunModel.getFiyat()) + "%0A" +
                                    "Yeni Fiyat: " + nf.format(yeniFiyat) + "%0A" +
                                    "Min Fiyat: " + nf.format(genelUrunModel.getMinFiyat()) + "%0A" +
                                    "Min Fiyat Tarihi: " + sdf.format(genelUrunModel.getMinFiyatTarihi()) + "%0A" +
                                    "İndirim Yüzde: " + nf.format(indYuzde) + "%0A" +
                                    "İndirim: " + nf.format(indirim) + "%0A" +
                                    "Ürün Link:" + urunUrl + "%0A" +
                                    "Tarih: " + sdf.format(new Date()) + "%0A" +
                                    "Akakçe Link:https://www.akakce.com/arama/?q=" + akakceLink + " %0A " +
                                    "***Generated By Emin KAYABASI***";

                            telegramMesajGonder(mesaj, dysonKategori, model, indYuzde.longValue(), yeniFiyat.longValue());
                            genelUrunModel.setSonMesajTarihi(new Date());
                        }

                    }
                    genelUrunModel.setFiyat(yeniFiyat);
                    if (yeniFiyat < genelUrunModel.getMinFiyat()) {
                        genelUrunModel.setMinFiyat(yeniFiyat);
                        genelUrunModel.setMinFiyatTarihi(new Date());
                    }

                    yeniUrunHashMap.put(dysonNo, genelUrunModel);
                }
            }
            return yeniUrunHashMap;
        } catch (Exception e) {
            logService.dysonLogYaz("DYSON Hata");
            Thread.sleep(3000L);
            return urunHashMap;
        }
    }

    private void telegramMesajGonder(String mesaj, DysonKategori dysonKategori, String urunId, Long indYuzde, Long fiyat) throws IOException, InterruptedException {
        List<DysonTelegramConf> dysonTelegramConfList = dysonTelegramConfRepository.findByDysonKategori(dysonKategori);

        for (DysonTelegramConf dysonTelegramConf : dysonTelegramConfList) {
            genelService.telegramMesajGonder(mesaj, dysonTelegramConf.getTelegramId(), urunId, "5785513906:AAG060JKluasdMpMnatsoRFy3JhxdG5eo2Q");
        }

        if (indYuzde > 40) {
            genelService.telegramBombaGonder(mesaj, urunId);
        }

        if (urunId.toUpperCase().contains("DYSON")) {
            genelService.telegramDysonGonder(mesaj, urunId);
        }

        if (fiyat <= 50) {
            genelService.telegramFiyatHatasiGonder(mesaj, urunId);
        }
    }
}